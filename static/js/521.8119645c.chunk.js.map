{"version":3,"file":"static/js/521.8119645c.chunk.js","mappings":"uNACA,GAAgB,QAAU,yBAAyB,aAAe,8BAA8B,SAAW,0BAA0B,QAAU,yBAAyB,KAAO,sBAAsB,aAAe,+B,SCapN,EAVoB,SAACA,GACjB,OAAO,4BACH,gBAAKC,UAAWC,EAAAA,aAAgBC,IAAI,gHACpC,0BACI,UAAC,KAAD,CAASC,GAAI,YAAcJ,EAAMK,GAAIJ,UAAW,SAAAK,GAAI,OAAIA,EAAKC,SAAWL,EAAAA,QAAYA,EAAAA,MAApF,UACKF,EAAMQ,KADX,aCAZ,EAJiB,SAACR,GACd,OAAO,iBAAKC,UAAWC,EAAAA,QAAhB,UAA4BF,EAAMS,QAAlC,S,uCCKLC,GAAcC,EAAAA,EAAAA,GAAiB,IAYxBC,GAAsBC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,wBAAlBD,EAXL,SAACb,GAC3B,OACI,kBAAMe,SAAUf,EAAMgB,aAAtB,WACI,SAACC,EAAA,EAAD,CAAOC,UAAWC,EAAAA,GACdX,KAAK,iBACLY,YAAY,qBACZC,SAAU,CAACC,EAAAA,EAAUZ,MACzB,4CCmCZ,EA5CgB,SAACV,GACb,IAAIuB,EAAQvB,EAAMwB,YAQdC,EAAiBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OACpC,SAACC,EAAD,CAAarB,KAAMoB,EAAEpB,KAAiBH,GAAIuB,EAAEvB,IAAZuB,EAAEvB,OAElCyB,EAAkBP,EAAMQ,QAAQJ,KAAI,SAAAK,GAAC,OACrC,SAACD,EAAD,CAAUtB,QAASuB,EAAEvB,SAAcuB,EAAE3B,OAUzC,OACI,iBAAKJ,UAAWC,EAAAA,QAAhB,WACI,yBACKuB,KAEL,gBAAKxB,UAAWC,EAAAA,SAAhB,SACK4B,KAGN,SAAElB,EAAF,CAAsBG,SAbV,SAACkB,GAChBjC,EAAMkC,mBAAmBD,EAAOE,gBAChCF,EAAOE,eAAiB,UCShC,GAAeC,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,KA9BoB,SAACd,GACrB,MAAO,CACHC,YAAaD,EAAMC,gBAKA,SAACc,GACxB,MAAO,CAEHJ,mBAAoB,SAACC,GACjBG,GAASJ,EAAAA,EAAAA,GAAmBC,SAoBpCI,EAAAA,EAFJ,CAIKC","sources":["webpack://reactjulia/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__4EHYG\",\"dialogsItems\":\"Dialogs_dialogsItems__tfD4R\",\"messages\":\"Dialogs_messages__r4Y1w\",\"active2\":\"Dialogs_active2__E6QkU\",\"item\":\"Dialogs_item__N4mWH\",\"profilestyle\":\"Dialogs_profilestyle__-Wj5W\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst DialogItems = (props) => {\r\n    return <div>\r\n        <img className={s.profilestyle} src='https://cdn2.vectorstock.com/i/1000x1000/02/71/profile-placeholder-default-avatar-girl-vector-23890271.jpg' />\r\n        <div>\r\n            <NavLink to={'/dialogs/' + props.id} className={elem => elem.isActive ? s.active2 : s.item}>\r\n                {props.name} </NavLink>\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default DialogItems;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\nconst Messages = (props) => {\r\n    return <div className={s.message}>{props.message}  </div>\r\n}\r\n\r\nexport default Messages;","import React, { createRef } from 'react';\r\nimport DialogItems from './DialogItem/DialogItem';\r\nimport s from './Dialogs.module.css';\r\nimport Messages from './Message/Message';\r\nimport { Navigate } from 'react-router-dom'\r\nimport { Field } from 'redux-form';\r\nimport { reduxForm } from 'redux-form';\r\nimport { TextArea } from '../common/Preloader/FormsControls';\r\nimport { MaxLengthCreator, required } from '../../utils/validators/validators';\r\n\r\nconst Maxlength50 = MaxLengthCreator(50)\r\nexport const AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={TextArea}\r\n                name='newMessageText'\r\n                placeholder='Enter your message'\r\n                validate={[required, Maxlength50]} />\r\n            <button > Send</button>\r\n        </form>\r\n    )\r\n}\r\nexport const AddMessageFormRedux = reduxForm({ form: 'dialogAddMessageForm' })(AddMessageForm)\r\n\r\n\r\n","import React, { createRef } from 'react';\r\nimport DialogItems from './DialogItem/DialogItem';\r\nimport s from './Dialogs.module.css';\r\nimport Messages from './Message/Message';\r\nimport {Navigate} from 'react-router-dom'\r\nimport { Field } from 'redux-form';\r\nimport { reduxForm } from 'redux-form';\r\nimport { AddMessageFormRedux } from './AddMessageForm';\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n    // let addtext = () => {\r\n    //     props.sendMessageCreator()\r\n    // }\r\n    // let onNewMessageChange = (e) => {\r\n    //     let body = e.target.value\r\n    //     props.updateMessageCreator(body)\r\n    // }\r\n    let Dialogelements = state.dialogs.map(d =>\r\n        <DialogItems name={d.name} key={d.id} id={d.id} />\r\n    );\r\n    let Messageselement = state.Message.map(m =>\r\n        <Messages message={m.message} key={m.id} />\r\n    )\r\n   // let newMessageText = state.newMesageText;\r\n    //   if(!props.isAuth) {\r\n    //       return <Navigate to='/Login'/>\r\n    //   } \r\n     let addNewMessage=(values)=>{\r\n        props.sendMessageCreator(values.newMessageText)\r\n        values.newMessageText = \"\";\r\n     }\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div>\r\n                {Dialogelements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {Messageselement}\r\n               \r\n            </div>\r\n           < AddMessageFormRedux onSubmit={addNewMessage}/>\r\n        </div>)\r\n}\r\n// const AddMessageForm=(props)=>{\r\n//     return (\r\n//         <form onSubmit={props.handleSubmit}>\r\n//             <Field component={'textarea'} name='newMessageText'  placeholder='Enter your message'/>\r\n//         <button > Send</button>\r\n//         </form>\r\n//     )\r\n// }\r\n// export const AddMessageFormRedux=reduxForm({form:'dialogAddMessageForm'})(AddMessageForm)\r\nexport default Dialogs;\r\n\r\n","import React, { createRef } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { WithAuthRedirect } from '../../Hoc/WithAuthRedirect';\r\nimport { sendMessageCreator } from '../../redux/dialog-reducer';\r\nimport Dialogs from './Dialogs';\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n        sendMessageCreator: (newMessageText) => {\r\n            dispatch(sendMessageCreator(newMessageText))\r\n        }\r\n    }\r\n}\r\n//let AuthRedirectComponent = WithAuthRedirect(Dialogs)\r\n\r\n\r\n// let AuthRedirectComponent=(props)=>{\r\n//     if(!this.props.isAuth) {\r\n//         return <Navigate to='/Login'/>\r\n//     } \r\n//     return <Dialogs {...props}/>\r\n// }\r\n\r\n\r\n\r\n\r\n//const DialogContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    WithAuthRedirect\r\n)\r\n    (Dialogs);\r\n\r\n"],"names":["props","className","s","src","to","id","elem","isActive","name","message","Maxlength50","MaxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","TextArea","placeholder","validate","required","state","dialogsPage","Dialogelements","dialogs","map","d","DialogItem","Messageselement","Message","m","values","sendMessageCreator","newMessageText","compose","connect","dispatch","WithAuthRedirect","Dialogs"],"sourceRoot":""}